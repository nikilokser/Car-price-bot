import threading
import subprocess
import time
import os

FLAG_FILE = "import_flag.txt"

def run_bot():
    print("ü§ñ –ó–∞–ø—É—Å–∫ Telegram-–±–æ—Ç–∞...")
    try:
        subprocess.run(["python3", "telegram_bot.py"])
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}")

def run_parser():
    print("üîÑ –ó–∞–ø—É—Å–∫ –ø–∞—Ä—Å–µ—Ä–∞ –≤ —Ñ–æ–Ω–µ...")
    try:
        subprocess.run(["python3", "parser.py"])
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø–∞—Ä—Å–µ—Ä–∞: {e}")

def run_eda(input_file):
    print(f"üßº –ó–∞–ø—É—Å–∫ eda.py –¥–ª—è {input_file}...")
    subprocess.run(["python3", "eda.py", input_file])

def run_import(input_file):
    print(f"üì¶ –ò–º–ø–æ—Ä—Ç –≤ Neo4j –∏–∑ {input_file}...")
    subprocess.run(["python3", "import_neo4j.py", input_file])

def remove_temp_files():
    for file in ["new_cars.csv", "clean_new_cars.csv"]:
        if os.path.exists(file):
            os.remove(file)
            print(f"üóëÔ∏è –£–¥–∞–ª—ë–Ω —Ñ–∞–π–ª: {file}")

def read_flag():
    if os.path.exists(FLAG_FILE):
        with open(FLAG_FILE, "r") as f:
            val = f.read().strip()
            return val.lower() == "true"
    return False

def write_flag(value: bool):
    with open(FLAG_FILE, "w") as f:
        f.write("True" if value else "False")

# === –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ñ–ª–∞–≥–∞ ===
if not os.path.exists(FLAG_FILE):
    write_flag(False)

# === –ó–∞–ø—É—Å–∫ —Ñ–æ–Ω–æ–≤—ã—Ö –ø–æ—Ç–æ–∫–æ–≤ ===
bot_thread = threading.Thread(target=run_bot, daemon=True)
parser_thread = threading.Thread(target=run_parser, daemon=True)

bot_thread.start()
parser_thread.start()

print("üì° –ù–∞–±–ª—é–¥–µ–Ω–∏–µ –∑–∞ new_cars.csv –∑–∞–ø—É—â–µ–Ω–æ...")

was_processed = False
first_full_import_done = read_flag()

while True:
    if os.path.exists("new_cars.csv") and not was_processed:
        print("üì• –û–±–Ω–∞—Ä—É–∂–µ–Ω —Ñ–∞–π–ª new_cars.csv. –û–±—Ä–∞–±–æ—Ç–∫–∞...")

        # === –û–¥–Ω–æ—Ä–∞–∑–æ–≤—ã–π –∏–º–ø–æ—Ä—Ç –≤—Å–µ—Ö –º–∞—à–∏–Ω –∏–∑ cars.csv ===
        if not first_full_import_done and os.path.exists("cars.csv"):
            print("üöÄ –ü–µ—Ä–≤—ã–π –∏–º–ø–æ—Ä—Ç –∏–∑ cars.csv...")
            run_eda("cars.csv")
            if os.path.exists("clean_cars.csv"):
                run_import("clean_cars.csv")
                write_flag(True)
                first_full_import_done = True
            else:
                print("‚ö†Ô∏è –§–∞–π–ª clean_cars.csv –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ—Å–ª–µ eda. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∏–º–ø–æ—Ä—Ç.")

        # === –ò–º–ø–æ—Ä—Ç –Ω–æ–≤—ã—Ö –º–∞—à–∏–Ω ===
        run_eda("new_cars.csv")

        if os.path.exists("clean_new_cars.csv"):
            run_import("clean_new_cars.csv")
            remove_temp_files()
            was_processed = True
            print("‚úÖ –ò–º–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à—ë–Ω –∏ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã —É–¥–∞–ª–µ–Ω—ã.")
        else:
            remove_temp_files()
            print("‚ö†Ô∏è –§–∞–π–ª clean_new_cars.csv –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ—Å–ª–µ eda. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∏–º–ø–æ—Ä—Ç.")

    # –ï—Å–ª–∏ new_cars.csv –Ω–µ–¥–∞–≤–Ω–æ –æ–±–Ω–æ–≤–∏–ª—Å—è ‚Üí —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥
    if os.path.exists("new_cars.csv"):
        file_time = os.path.getmtime("new_cars.csv")
        current_time = time.time()
        if current_time - file_time < 60:
            was_processed = False
    
    time.sleep(30)
